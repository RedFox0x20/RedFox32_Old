Interrupt Descriptor Table
==========================
There are 256 possible interrupts so the IDT needs to contain a complete 256
entries. Each IDT entry is 8 bytes long (totalling 2048 bytes, 2 kilo-bytes).

IDT entries have the following structure:

16 bits: Low function bits
16 bits: Selector - GDT or LDT
8  bits: Unused, set zero
8  bits: Type and Attributes
		 - 0b0101 (0x5) 32 bit Task Gate
		 - 0b0110 (0x6) 16 bit Interrupt Gate
		 - 0b0111 (0x7) 16 bit Trap Gate
		 - 0b1110 (0xE) 32 bit Interrupt Gate
		 - 0b1111 (0xF) 32 bit Trap Gate
16 bits: High function bits

* This structure is different for AMD machines, the structure here is for IA-32
  (x86)

Gate types
==========
Trap Gates:
- Trap gates are used when a fault occours I.E. A bad instruction, the address
  of the faulting instruction is saved so it can be retried.

Interrupt Gates:
- Interrupt gates are used for interrupt services such as if the code were to
  perform the `int 0x80` instruction, the CPU would read the descriptor at
  0x80 * 8 in the IDT, get the address of the function to call and jump to it,
  when returning we return to the next instruction.

Returning from interrupts:
- If the gate was defined as a 16 bit gate and running in 32 bit mode then the
  CPU will return in Real mode, this could be useful for returning back and using
  BIOS functions, assuming they still exist in memory.

